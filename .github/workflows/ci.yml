name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - "*"
  workflow_dispatch:

defaults:
  run:
    shell: bash -l {0}

env:
  IS_PRERELEASE: ${{ github.event_name == 'workflow_dispatch' }}

concurrency:
  group: "${{ github.ref }}-${{ github.head_ref }}"
  cancel-in-progress: true

jobs:
  tests:
    name: ${{ matrix.label }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - label: earliest
            os: ubuntu-latest
            python-version: "3.10"
            uv-sync-args: ""
            uv-run-args: "--with rdkit==2022.09.1"
            coverage: false
          - label: baseline
            os: ubuntu-latest
            python-version: "3.11"
            uv-sync-args: "--locked"
            uv-run-args: ""
            coverage: true
          - label: latest
            os: ubuntu-latest
            python-version: "3.13"
            uv-sync-args: "--upgrade"
            uv-run-args: ""
            coverage: false

    steps:
      - uses: actions/checkout@v4

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: 24
          registry-url: "https://registry.npmjs.org/"
          cache: "npm"

      - name: Install Firefox
        uses: browser-actions/setup-firefox@latest
      
      - run: firefox --version

      - name: Prepare Selenium
        uses: browser-actions/setup-geckodriver@latest
        with:
          geckodriver-version: "0.32.0"
      
      - run: geckodriver --version

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install project and dependencies
        run: |
          uv sync --group tests ${{ matrix.uv-sync-args }}

      - name: Show installed environment
        run: |
          uv pip list
      
      - name: Run tests
        run: |
          uv run ${{ matrix.uv-run-args }} poe tests \
            --cov=mols2grid --cov-report=xml \
            tests/ -m "not webdriver"

      - name: Run webdriver tests
        uses: nick-fields/retry@v3
        with:
          timeout_seconds: 340
          max_attempts: 5
          retry_on: timeout
          shell: bash
          command: |
            uv run ${{ matrix.uv-run-args }} poe tests \
              --cov=mols2grid --cov-report=xml --cov-append \
              tests/ -m "webdriver"

      - name: Measure tests coverage
        if: matrix.coverage
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          fail_ci_if_error: true
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Prepare for build
        run: |
          uv pip uninstall mols2grid
          uv run poe build
          echo "$SCRIPT" > test_install.py
          cat test_install.py
        env:
          SCRIPT: |
            import mols2grid as mg
            from rdkit import RDConfig
            sdf = f"{RDConfig.RDDocsDir}/Book/data/solubility.test.sdf"
            mg.save(sdf, output="/dev/null")

      - name: Test tar.gz build
        run: |
          uv pip install dist/mols2grid-*.tar.gz
          source .venv/bin/activate
          python test_install.py
          uv pip uninstall mols2grid

      - name: Test wheel build
        run: |
          uv pip install dist/mols2grid-*.whl
          source .venv/bin/activate
          python test_install.py
