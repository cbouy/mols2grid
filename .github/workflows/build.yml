name: build
on:
  release:
    types: [released]
  workflow_dispatch:

defaults:
  run:
    shell: bash -l {0}

env:
  IS_PRERELEASE: ${{ github.event_name == 'workflow_dispatch' }}

jobs:
  build-n-publish:
    name: Build and publish mols2grid
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Get prerelease version tags
      if: env.IS_PRERELEASE == 'true'
      run: |
        py_dirty_tag=$(awk '/__version__ = "[[:digit:]+]\.[[:digit:]+]\.[[:digit:]+]\-.+"/ {print $3}' ./mols2grid/_version.py)
        py_is_pre=$(test -z "$py_dirty_tag" && echo "false" || echo "true")
        js_version_string=$(grep '"version":' ./package.json)
        js_dirty_tag=$(echo "$js_version_string" | cut -d- -f2)
        js_is_pre=$(test "$js_version_string" == "$js_dirty_tag" && echo "false" || echo "true")
        echo "py_is_pre=$py_is_pre" >> $GITHUB_ENV
        echo "js_is_pre=$js_is_pre" >> $GITHUB_ENV

    - name: Fail if prerelease is not correctly versioned
      if: (env.IS_PRERELEASE == 'true') && !( env.py_is_pre && env.js_is_pre )
      uses: actions/github-script@v7
      with:
        script: |
          core.setFailed("Versions are not tagged as a prerelease")

    - name: Install node
      uses: actions/setup-node@v4
      with:
        node-version: 24
        registry-url: "https://registry.npmjs.org/"
        cache: "npm"

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        python-version: 3.11
        enable-cache: true
        cache-dependency-glob: "uv.lock"
    
    - name: Install project and dependencies
      run: |
        uv sync --group build

    - name: Show installed environment
      run: |
        uv pip list

    - name: Build package
      run: |
        uv run poe build

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_TOKEN }}

    - name: Publish the NPM package (pre-release)
      if: env.IS_PRERELEASE == 'true'
      run: |
        npm publish --tag dev
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        PRE_RELEASE: ${{ env.IS_PRERELEASE }}
      working-directory: mols2grid

    - name: Publish the NPM package
      if: env.IS_PRERELEASE != 'true'
      run: |
        npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        PRE_RELEASE: ${{ env.IS_PRERELEASE }}
      working-directory: mols2grid